//
// Generated by CocoaPods-Keys
// on 30/03/2019
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "YoutubeKitSampleKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation YoutubeKitSampleKeys

  @dynamic aPIKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(YoutubeKitSampleKeys *, SEL) = NULL;

  if ([key isEqualToString:@"aPIKey"]) {
    implementation = _podKeys956e83c1877f623b1f12213ab02d75c9;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys956e83c1877f623b1f12213ab02d75c9(YoutubeKitSampleKeys *self, SEL _cmd)
{
  
    
      char cString[40] = { YoutubeKitSampleKeysData[1110], YoutubeKitSampleKeysData[227], YoutubeKitSampleKeysData[389], YoutubeKitSampleKeysData[801], YoutubeKitSampleKeysData[291], YoutubeKitSampleKeysData[853], YoutubeKitSampleKeysData[1281], YoutubeKitSampleKeysData[1098], YoutubeKitSampleKeysData[1230], YoutubeKitSampleKeysData[522], YoutubeKitSampleKeysData[165], YoutubeKitSampleKeysData[1183], YoutubeKitSampleKeysData[799], YoutubeKitSampleKeysData[744], YoutubeKitSampleKeysData[432], YoutubeKitSampleKeysData[798], YoutubeKitSampleKeysData[99], YoutubeKitSampleKeysData[638], YoutubeKitSampleKeysData[1083], YoutubeKitSampleKeysData[254], YoutubeKitSampleKeysData[1368], YoutubeKitSampleKeysData[435], YoutubeKitSampleKeysData[1023], YoutubeKitSampleKeysData[343], YoutubeKitSampleKeysData[731], YoutubeKitSampleKeysData[1273], YoutubeKitSampleKeysData[670], YoutubeKitSampleKeysData[923], YoutubeKitSampleKeysData[282], YoutubeKitSampleKeysData[1319], YoutubeKitSampleKeysData[1082], YoutubeKitSampleKeysData[654], YoutubeKitSampleKeysData[720], YoutubeKitSampleKeysData[908], YoutubeKitSampleKeysData[653], YoutubeKitSampleKeysData[323], YoutubeKitSampleKeysData[34], YoutubeKitSampleKeysData[1396], YoutubeKitSampleKeysData[1232], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char YoutubeKitSampleKeysData[1406] = "oiahNZZC/clLyM5Y7Qfvh/+LkxiRCpWDx6Vv9bWdy7aTejt3UX9nTbXCJTzLzgI2edF71Bm3EfRd9NEq2vZltYMER4UvpoZZVbYWsd9QwhrYIXixmgsYDLUFUWJV0sN0nx5Yd/U4d97FCOO+GMhcpH8kpqRLypndfPWEVe7mrcLdXkJrX/KpBd/i6VxjKMsUrEjGsKyjUzyjnYR0CQa9UOfgNK4bNvuO42AIyR2PEgyHrERlhA+btst7ucck5DolvRfNpuGmrygP3ekKJ2ym/f/7G49zDAGQ2HNSdf5+goLSGGFaaHw3QTpp+zuybZrIMRPSic77zwZrxjlB7gSFA+PGiKhYdvptGudh19pl0AI7OOQY2/8vhO7H9qGOoBobRp93mzb0BcPMxHJD+ks5G7NW/bFxDPYHGQpWXTtdBwJtjoFaT8m6gtvzlgNJZ6tU/OQS/nfUSe4qbnbtPQiYOLSIrqxFsoq9VyUH4KZbCTSGTs334pAJD8UXk19Q0z5V9aF4fbsh2qQa/ifMUF+diQ3Z3nCyHMZprQ3Y5ifEGE3gDKyhEAmy0W+FhNXLHVdnVRoXveC7qdzBGdLd0E+AnXiBUw+a/X5UvOmVWRERZbmfhdt1cdvs4EEe6DxBLlOVgTJj2Gb9hygCzkFXb1pEnBEMQRnqWpLnQGYxtmQ0R69atusrR7SgD6kKggGKOlQDsdL+yrs/qRJu95NXlLlQtWwK/ryx9Po9wL3F8tETh5kBfv+fwVtw9JKNdPJenZjz9cZitjQ12wjuZIVN0XDrNsr5SA/8o5GqPalsZJbOdxGCpXOkhjs/q5b/K3J7tl9ARpRNhNbKQT1LHG02M3MvpyPMiQ1rIub46dq4s/kSn8sWGiHoYcw+m/q3GDCFF2X1ZJAEthjMvJh6ZNb2gyIbnHQ6WeugMeWL65DFl6LuqWtsAAovVJ+4MKY1HVvdioNxLw1YhEy3HSk0tCFBdqVv51HlHFLKngrXQerdrc4aqy+k8oPl1Akgzr0zX62eEycUkdg3YZ9UesjfxMnFfWwRZO7nsmg45wdQ64kjFp/DyfoIKxtpi2JSrqvBEvkEvKDF3/WT8PnagSqDPoc/PMsnJKALTrFC40NWy1PvwOGA4XhA8ie39PSAxjwn4AW1cyPPWlBuT7GjQ8/hk7YaxEFYAzjfjFgqj5qE6zPH3RRzaFvNMs06hqhbMR/9BIqOwEXremMlbx1ZtGJRYp4ZA/+gJ9+XdJbhV3qaWxfXToPeIfeIbdGzOoYLWzdnN3GXJOXMJBwtNRUXxQJalznq6I4e+OC4io0FllP/hNYb5xRPVWqvMfKDGltlYWoVzRFP4KC2vuhau1XPT+K/Pivpd5OuFwKL4lgHvw2I20qgHiNu71uQFhAnu4c4a/PCHs1A\\\"";

- (NSString *)description
{
  return [@{
            @"aPIKey": self.aPIKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
